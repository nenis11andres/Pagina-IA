name: Destruir Infraestructura con Terraform

on:
  workflow_dispatch:

jobs:
  destruir:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: aop-pagina-ia
      STATE_KEY: terraform/terraform.tfstate
      LOCK_ID: aop-pagina-ia/terraform/terraform.tfstate
      DYNAMODB_TABLE: terraform-lock-table

    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v3

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      # Eliminar objetos del bucket (si no se habÃ­a hecho antes)
      - name: Eliminar objetos del bucket S3
        run: |
          echo "ðŸ§¹ Eliminando objetos del bucket: $BUCKET_NAME"
          aws s3 rm s3://$BUCKET_NAME --recursive || true

      # Eliminar versiones de los objetos si el versionado estÃ¡ habilitado
      - name: Eliminar versiones de objetos del bucket S3
        run: |
          echo "ðŸ§¹ Eliminando versiones de objetos del bucket: $BUCKET_NAME"
          aws s3api list-object-versions --bucket $BUCKET_NAME --query "Versions[].[VersionId,Key]" --output text | while read version_id key; do
            aws s3api delete-object --bucket $BUCKET_NAME --key "$key" --version-id "$version_id" || true
          done || true

      - name: Eliminar estado remoto S3
        run: |
          echo "ðŸ§¨ Eliminando archivo de estado remoto: $STATE_KEY"
          aws s3 rm s3://$BUCKET_NAME/${STATE_KEY} || true

      - name: Eliminar lock en DynamoDB
        run: |
          echo "ðŸ”“ Eliminando lock de DynamoDB con LockID=$LOCK_ID..."
          aws dynamodb delete-item \
            --table-name $DYNAMODB_TABLE \
            --key "{\"LockID\": {\"S\": \"${LOCK_ID}\"}}" || true

      - name: Inicializar Terraform
        working-directory: ./terraform
        run: terraform init -force-copy

      - name: Ejecutar Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve -lock=false
