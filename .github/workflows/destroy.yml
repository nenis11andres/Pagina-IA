name: Destruir Infraestructura con Terraform

on:
  workflow_dispatch:  # Se lanza manualmente desde GitHub

jobs:
  destruir:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: aop-pagina-ia
      STATE_KEY: terraform/terraform.tfstate
      LOCK_ID: terraform/terraform.tfstate

    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v3

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Eliminar archivos del bucket S3 (opcional)
        run: |
          echo "Eliminando archivos del bucket: $BUCKET_NAME"
          aws s3 rm s3://$BUCKET_NAME --recursive || true

      - name: Eliminar archivo de estado de Terraform del bucket S3
        run: |
          echo "Eliminando archivo de estado de Terraform del bucket"
          aws s3 rm s3://$BUCKET_NAME/${STATE_KEY} || true

      - name: Eliminar lock de la tabla DynamoDB
        run: |
          echo "Eliminando el lock de DynamoDB..."
          aws dynamodb delete-item \
            --table-name terraform-lock-table \
            --key "{\"LockID\": {\"S\": \"${LOCK_ID}\"}}" || true

      - name: Inicializar Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Ejecutar Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve -lock=false
