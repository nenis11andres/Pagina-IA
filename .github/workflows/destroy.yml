name: Destruir Infraestructura con Terraform

on:
  workflow_dispatch:

jobs:
  destruir:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      BUCKET_NAME: aop-pagina-ia
      STATE_KEY: terraform/terraform.tfstate
      LOCK_ID: aop-pagina-ia/terraform/terraform.tfstate
      DYNAMODB_TABLE: terraform-lock-table

    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v3

      - name: Configurar credenciales de AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Eliminar todas las versiones y delete markers del bucket
        run: |
          echo "ðŸ§¹ Borrando TODAS las versiones y delete markers del bucket: $BUCKET_NAME"

          while true; do
            versions=$(aws s3api list-object-versions --bucket $BUCKET_NAME --query="{Objects: Versions[].{Key: Key, VersionId: VersionId}}" --output json)
            markers=$(aws s3api list-object-versions --bucket $BUCKET_NAME --query="{Objects: DeleteMarkers[].{Key: Key, VersionId: VersionId}}" --output json)

            combined=$(jq -s '.[0].Objects + .[1].Objects | {Objects: .}' <(echo "$versions") <(echo "$markers"))

            count=$(echo "$combined" | jq '.Objects | length')

            if [ "$count" -eq "0" ]; then
              echo "âœ… No quedan versiones ni delete markers."
              break
            fi

            echo "$combined" > delete.json
            aws s3api delete-objects --bucket $BUCKET_NAME --delete file://delete.json
            sleep 2
          done

      - name: Eliminar archivo de estado remoto
        run: |
          echo "ðŸ§¨ Eliminando archivo de estado remoto: $STATE_KEY"
          aws s3 rm s3://$BUCKET_NAME/${STATE_KEY} || true

      - name: Eliminar lock en DynamoDB
        run: |
          echo "ðŸ”“ Eliminando lock de DynamoDB con LockID=$LOCK_ID..."
          aws dynamodb delete-item \
            --table-name $DYNAMODB_TABLE \
            --key "{\"LockID\": {\"S\": \"${LOCK_ID}\"}}" || true

      - name: Inicializar Terraform con -force-copy
        working-directory: ./terraform
        run: terraform init -force-copy

      - name: Ejecutar Terraform Destroy
        working-directory: ./terraform
        run: terraform destroy -auto-approve 
